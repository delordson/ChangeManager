//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Provides members to query and update data in the ApplicationData datasource.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Inserting(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Inserted(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Updating(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Updated(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Deleting(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Deleted(global::LightSwitchApplication.AssociatedRisk entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Validate(global::LightSwitchApplication.AssociatedRisk entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisks_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssociatedRisk, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Inserting(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Inserted(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Updating(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Updated(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Deleting(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Deleted(global::LightSwitchApplication.ChangeQualificationAction entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Validate(global::LightSwitchApplication.ChangeQualificationAction entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualificationActions_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualificationAction, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Inserting(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Inserted(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Updating(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Updated(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Deleting(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Deleted(global::LightSwitchApplication.ChangeQualification entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Validate(global::LightSwitchApplication.ChangeQualification entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualifications_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualification, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Inserting(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Inserted(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Updating(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Updated(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Deleting(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Deleted(global::LightSwitchApplication.ChangeRequest entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Validate(global::LightSwitchApplication.ChangeRequest entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequests_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Inserting(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Inserted(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Updating(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Updated(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Deleting(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Deleted(global::LightSwitchApplication.ChangeRequestStatus entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Validate(global::LightSwitchApplication.ChangeRequestStatus entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequestStatuses_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.Employee entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.Employee entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAssignedRisks_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedRisks_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyAssignedRisks_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.AssociatedRisk> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedRisks_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssociatedRisk> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyAssignedRisks_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeQualificationActions_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualificationActions_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeQualificationActions_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualificationAction> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualificationActions_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeQualificationAction> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualificationActions_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeQualifications_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualifications_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeQualifications_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualification> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualifications_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeQualification> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeQualifications_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeRequests_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeRequests_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void MyChangeRequests_PreprocessQuery(ref global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeRequest> query);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeRequests_Executed(global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeRequest> result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        partial void MyChangeRequests_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssociatedRisk>
                __AssociatedRisksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssociatedRisk>(
                    "AssociatedRisks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__AssociatedRisks_Filter);
            private static bool __AssociatedRisks_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssociatedRisks_CanInsert(ref result);
                return result;
            }
            private static bool __AssociatedRisks_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssociatedRisks_CanUpdate(ref result);
                return result;
            }
            private static bool __AssociatedRisks_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssociatedRisks_CanDelete(ref result);
                return result;
            }
            private static bool __AssociatedRisks_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.AssociatedRisks_CanRead(ref result);
                return result;
            }
            private static void __AssociatedRisks_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Inserting(e);
            }
            private static void __AssociatedRisks_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Inserted(e);
            }
            private static void __AssociatedRisks_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Updating(e);
            }
            private static void __AssociatedRisks_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Updated(e);
            }
            private static void __AssociatedRisks_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Deleting(e);
            }
            private static void __AssociatedRisks_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e)
            {
                d.AssociatedRisks_Deleted(e);
            }
            private static void __AssociatedRisks_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.AssociatedRisks_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssociatedRisk, bool>> __AssociatedRisks_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.AssociatedRisk, bool>> filter = null;
                d.AssociatedRisks_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualificationAction>
                __ChangeQualificationActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualificationAction>(
                    "ChangeQualificationActions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualificationActions_Filter);
            private static bool __ChangeQualificationActions_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualificationActions_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeQualificationActions_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualificationActions_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeQualificationActions_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualificationActions_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeQualificationActions_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualificationActions_CanRead(ref result);
                return result;
            }
            private static void __ChangeQualificationActions_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Inserting(e);
            }
            private static void __ChangeQualificationActions_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Inserted(e);
            }
            private static void __ChangeQualificationActions_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Updating(e);
            }
            private static void __ChangeQualificationActions_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Updated(e);
            }
            private static void __ChangeQualificationActions_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Deleting(e);
            }
            private static void __ChangeQualificationActions_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e)
            {
                d.ChangeQualificationActions_Deleted(e);
            }
            private static void __ChangeQualificationActions_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualificationAction e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeQualificationActions_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualificationAction, bool>> __ChangeQualificationActions_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualificationAction, bool>> filter = null;
                d.ChangeQualificationActions_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualification>
                __ChangeQualificationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualification>(
                    "ChangeQualifications",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeQualifications_Filter);
            private static bool __ChangeQualifications_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualifications_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeQualifications_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualifications_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeQualifications_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualifications_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeQualifications_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeQualifications_CanRead(ref result);
                return result;
            }
            private static void __ChangeQualifications_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Inserting(e);
            }
            private static void __ChangeQualifications_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Inserted(e);
            }
            private static void __ChangeQualifications_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Updating(e);
            }
            private static void __ChangeQualifications_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Updated(e);
            }
            private static void __ChangeQualifications_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Deleting(e);
            }
            private static void __ChangeQualifications_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e)
            {
                d.ChangeQualifications_Deleted(e);
            }
            private static void __ChangeQualifications_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeQualifications_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualification, bool>> __ChangeQualifications_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeQualification, bool>> filter = null;
                d.ChangeQualifications_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>
                __ChangeRequestsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>(
                    "ChangeRequests",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequests_Filter);
            private static bool __ChangeRequests_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeRequests_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequests_CanRead(ref result);
                return result;
            }
            private static void __ChangeRequests_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Inserting(e);
            }
            private static void __ChangeRequests_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Inserted(e);
            }
            private static void __ChangeRequests_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Updating(e);
            }
            private static void __ChangeRequests_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Updated(e);
            }
            private static void __ChangeRequests_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Deleting(e);
            }
            private static void __ChangeRequests_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e)
            {
                d.ChangeRequests_Deleted(e);
            }
            private static void __ChangeRequests_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequest e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeRequests_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> __ChangeRequests_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequest, bool>> filter = null;
                d.ChangeRequests_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequestStatus>
                __ChangeRequestStatusesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequestStatus>(
                    "ChangeRequestStatuses",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ChangeRequestStatuses_Filter);
            private static bool __ChangeRequestStatuses_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanInsert(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanUpdate(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanDelete(ref result);
                return result;
            }
            private static bool __ChangeRequestStatuses_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ChangeRequestStatuses_CanRead(ref result);
                return result;
            }
            private static void __ChangeRequestStatuses_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Inserting(e);
            }
            private static void __ChangeRequestStatuses_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Inserted(e);
            }
            private static void __ChangeRequestStatuses_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Updating(e);
            }
            private static void __ChangeRequestStatuses_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Updated(e);
            }
            private static void __ChangeRequestStatuses_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Deleting(e);
            }
            private static void __ChangeRequestStatuses_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e)
            {
                d.ChangeRequestStatuses_Deleted(e);
            }
            private static void __ChangeRequestStatuses_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.ChangeRequestStatus e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ChangeRequestStatuses_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> __ChangeRequestStatuses_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ChangeRequestStatus, bool>> filter = null;
                d.ChangeRequestStatuses_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Employee>(
                    "Employees",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Employee e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> __Employees_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Employee, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssociatedRisk>
                __MyAssignedRisksEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.AssociatedRisk>(
                    "MyAssignedRisks",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedRisks_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedRisks_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedRisks_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedRisks_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyAssignedRisks_PreprocessQuery);
            private static bool __MyAssignedRisks_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyAssignedRisks_CanExecute(ref r);
                return r;
            }
            private static void __MyAssignedRisks_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAssignedRisks_Executing();
            }
            private static void __MyAssignedRisks_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyAssignedRisks_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.AssociatedRisk>)args[0]);
            }
            private static void __MyAssignedRisks_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyAssignedRisks_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyAssignedRisks_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.AssociatedRisk> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.AssociatedRisk>)args[0];
                d.MyAssignedRisks_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualificationAction>
                __MyChangeQualificationActionsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualificationAction>(
                    "MyChangeQualificationActions",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualificationActions_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualificationActions_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualificationActions_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualificationActions_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualificationActions_PreprocessQuery);
            private static bool __MyChangeQualificationActions_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyChangeQualificationActions_CanExecute(ref r);
                return r;
            }
            private static void __MyChangeQualificationActions_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeQualificationActions_Executing();
            }
            private static void __MyChangeQualificationActions_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeQualificationActions_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeQualificationAction>)args[0]);
            }
            private static void __MyChangeQualificationActions_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyChangeQualificationActions_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyChangeQualificationActions_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualificationAction> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualificationAction>)args[0];
                d.MyChangeQualificationActions_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualification>
                __MyChangeQualificationsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeQualification>(
                    "MyChangeQualifications",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualifications_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualifications_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualifications_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualifications_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeQualifications_PreprocessQuery);
            private static bool __MyChangeQualifications_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyChangeQualifications_CanExecute(ref r);
                return r;
            }
            private static void __MyChangeQualifications_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeQualifications_Executing();
            }
            private static void __MyChangeQualifications_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeQualifications_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeQualification>)args[0]);
            }
            private static void __MyChangeQualifications_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyChangeQualifications_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyChangeQualifications_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualification> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeQualification>)args[0];
                d.MyChangeQualifications_PreprocessQuery(ref query);
                return query;
            }
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>
                __MyChangeRequestsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryOperationEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.ChangeRequest>(
                    "MyChangeRequests",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeRequests_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeRequests_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeRequests_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeRequests_Failed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__MyChangeRequests_PreprocessQuery);
            private static bool __MyChangeRequests_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.MyChangeRequests_CanExecute(ref r);
                return r;
            }
            private static void __MyChangeRequests_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeRequests_Executing();
            }
            private static void __MyChangeRequests_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.MyChangeRequests_Executed((global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeRequest>)args[0]);
            }
            private static void __MyChangeRequests_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.MyChangeRequests_ExecuteFailed(ex);
            }
            private static global::System.Linq.IQueryable __MyChangeRequests_PreprocessQuery(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeRequest> query = (global::System.Linq.IQueryable<global::LightSwitchApplication.ChangeRequest>)args[0];
                d.MyChangeRequests_PreprocessQuery(ref query);
                return query;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
        }
    
        #endregion
    }
    
    #endregion
}
