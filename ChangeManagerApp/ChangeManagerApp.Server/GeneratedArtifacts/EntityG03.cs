

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class ChangeQualification : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the ChangeQualification entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ChangeQualification()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ChangeQualification(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ChangeQualification> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.ChangeQualification.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualification_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeQualification_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string QualificationType
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.QualificationType);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.QualificationType, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualificationType_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualificationType_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void QualificationType_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string Description
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Description);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Description, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Description_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.StartDate);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.StartDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void StartDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetCompletionDate
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.TargetCompletionDate);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.TargetCompletionDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetCompletionDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetCompletionDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetCompletionDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateClosed
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.DateClosed);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.DateClosed, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateClosed_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ChangeRequest ChangeRequest
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.ChangeQualification.DetailsClass.SetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Microsoft.LightSwitch.Framework.EntityCollection<global::LightSwitchApplication.ChangeQualificationAction> ChangeQualificationActions
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetValue(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeQualificationActions);
            }
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public Microsoft.LightSwitch.IDataServiceQueryable<global::LightSwitchApplication.ChangeQualificationAction> ChangeQualificationActionsQuery
        {
            get
            {
                return global::LightSwitchApplication.ChangeQualification.DetailsClass.GetQuery(this, global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeQualificationActions);
            }
        }

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.ChangeQualification,
                global::LightSwitchApplication.ChangeQualification.DetailsClass,
                global::LightSwitchApplication.ChangeQualification.DetailsClass.IImplementation,
                global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>.Entry
                __ChangeQualificationEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>.Entry(
                    global::LightSwitchApplication.ChangeQualification.DetailsClass.__ChangeQualification_CreateNew,
                    global::LightSwitchApplication.ChangeQualification.DetailsClass.__ChangeQualification_Created,
                    global::LightSwitchApplication.ChangeQualification.DetailsClass.__ChangeQualification_AllowSaveWithErrors);
            private static global::LightSwitchApplication.ChangeQualification __ChangeQualification_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.ChangeQualification> es)
            {
                return new global::LightSwitchApplication.ChangeQualification(es);
            }
            private static void __ChangeQualification_Created(global::LightSwitchApplication.ChangeQualification e)
            {
                e.ChangeQualification_Created();
            }
            private static bool __ChangeQualification_AllowSaveWithErrors(global::LightSwitchApplication.ChangeQualification e)
            {
                bool result = false;
                e.ChangeQualification_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string> QualificationType
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.QualificationType) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string> Description
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Description) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>> StartDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.StartDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime> TargetCompletionDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.TargetCompletionDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>> DateClosed
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.DateClosed) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest> ChangeRequest
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction> ChangeQualificationActions
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeQualificationActions) as global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string QualificationType { get; set; }
                new string Description { get; set; }
                new global::System.Nullable<global::System.DateTime> StartDate { get; set; }
                new global::System.DateTime TargetCompletionDate { get; set; }
                new global::System.Nullable<global::System.DateTime> DateClosed { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ChangeRequest { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::System.Collections.IEnumerable ChangeQualificationActions { get; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry
                    QualificationType = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry(
                        "QualificationType",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._QualificationType_OnValueChanged);
                private static void _QualificationType_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._QualificationType, sf);
                }
                private static bool _QualificationType_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.QualificationType_IsReadOnly(ref result);
                    return result;
                }
                private static void _QualificationType_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.QualificationType_Validate(r);
                }
                private static string _QualificationType_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.QualificationType;
                }
                private static void _QualificationType_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, string v)
                {
                    d.ImplementationEntity.QualificationType = v;
                }
                private static void _QualificationType_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.QualificationType_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry
                    Description = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry(
                        "Description",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Description_OnValueChanged);
                private static void _Description_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._Description, sf);
                }
                private static bool _Description_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.Description_IsReadOnly(ref result);
                    return result;
                }
                private static void _Description_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Description_Validate(r);
                }
                private static string _Description_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.Description;
                }
                private static void _Description_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, string v)
                {
                    d.ImplementationEntity.Description = v;
                }
                private static void _Description_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.Description_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    StartDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "StartDate",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._StartDate_OnValueChanged);
                private static void _StartDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._StartDate, sf);
                }
                private static bool _StartDate_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.StartDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _StartDate_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.StartDate_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _StartDate_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.StartDate;
                }
                private static void _StartDate_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.StartDate = global::LightSwitchApplication.ChangeQualification.DetailsClass.TruncateDate(v);
                }
                private static void _StartDate_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.StartDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime>.Entry
                    TargetCompletionDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime>.Entry(
                        "TargetCompletionDate",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._TargetCompletionDate_OnValueChanged);
                private static void _TargetCompletionDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetCompletionDate, sf);
                }
                private static bool _TargetCompletionDate_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.TargetCompletionDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetCompletionDate_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetCompletionDate_Validate(r);
                }
                private static global::System.DateTime _TargetCompletionDate_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetCompletionDate;
                }
                private static void _TargetCompletionDate_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetCompletionDate = global::LightSwitchApplication.ChangeQualification.DetailsClass.TruncateDate(v);
                }
                private static void _TargetCompletionDate_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.TargetCompletionDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateClosed = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateClosed",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._DateClosed_OnValueChanged);
                private static void _DateClosed_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._DateClosed, sf);
                }
                private static bool _DateClosed_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.DateClosed_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateClosed_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateClosed_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateClosed_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.DateClosed;
                }
                private static void _DateClosed_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateClosed = global::LightSwitchApplication.ChangeQualification.DetailsClass.TruncateDate(v);
                }
                private static void _DateClosed_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.DateClosed_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Entry
                    ChangeRequest = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Entry(
                        "ChangeRequest",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_GetCoreImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_Refresh,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeRequest_OnValueChanged);
                private static void _ChangeRequest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangeRequest, sf);
                }
                private static bool _ChangeRequest_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.ChangeRequest_IsReadOnly(ref result);
                    return result;
                }
                private static void _ChangeRequest_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ChangeRequest_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ChangeRequest_GetCoreImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangeRequest;
                }
                private static global::LightSwitchApplication.ChangeRequest _ChangeRequest_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ChangeRequest, global::LightSwitchApplication.ChangeRequest.DetailsClass>(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest);
                }
                private static void _ChangeRequest_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, global::LightSwitchApplication.ChangeRequest v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest, (i, ev) => i.ChangeRequest = ev, v);
                }
                private static void _ChangeRequest_Refresh(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest);
                }
                private static void _ChangeRequest_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.ChangeRequest_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.ChangeQualification e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.ChangeQualification e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.ChangeQualification e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction>.Entry
                    ChangeQualificationActions = new global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction>.Entry(
                        "ChangeQualificationActions",
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeQualificationActions_Stub,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeQualificationActions_GetReferencedEntities,
                        global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties._ChangeQualificationActions_GetEntityCollection);
                private static void _ChangeQualificationActions_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.ChangeQualification.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction>.Data> c, global::LightSwitchApplication.ChangeQualification.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangeQualificationActions, sf);
                }
                private static global::System.Collections.Generic.IEnumerable<global::LightSwitchApplication.ChangeQualificationAction> _ChangeQualificationActions_GetReferencedEntities(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.GetReferencedEntities<global::LightSwitchApplication.ChangeQualificationAction, global::LightSwitchApplication.ChangeQualificationAction.DetailsClass>(global::LightSwitchApplication.ChangeQualification.DetailsClass.PropertySetProperties.ChangeQualificationActions, ref d._ChangeQualificationActions);
                }
                private static global::System.Collections.IEnumerable _ChangeQualificationActions_GetEntityCollection(global::LightSwitchApplication.ChangeQualification.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangeQualificationActions;
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data _QualificationType;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data _Description;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _StartDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.DateTime>.Data _TargetCompletionDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateClosed;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Data _ChangeRequest;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityCollectionProperty<global::LightSwitchApplication.ChangeQualification, global::LightSwitchApplication.ChangeQualification.DetailsClass, global::LightSwitchApplication.ChangeQualificationAction>.Data _ChangeQualificationActions;
            
        }
    
        #endregion
    }
    
    #endregion
}
