

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Entities
    
    /// <summary>
    /// No Modeled Description Available
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
    public sealed partial class AssociatedRisk : global::Microsoft.LightSwitch.Framework.Base.EntityObject<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new instance of the AssociatedRisk entity.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssociatedRisk()
            : this(null)
        {
        }
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public AssociatedRisk(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssociatedRisk> entitySet)
            : base(entitySet)
        {
            global::LightSwitchApplication.AssociatedRisk.DetailsClass.Initialize(this);
        }
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisk_Created();
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssociatedRisk_AllowSaveWithErrors(ref bool result);
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Gets the Application object for this application.  The Application object provides access to active screens, methods to open screens and access to the current user.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace> Application
        {
            get
            {
                return (global::Microsoft.LightSwitch.IApplication<global::LightSwitchApplication.DataWorkspace>)global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Gets the containing data workspace.  The data workspace provides access to all data sources in the application.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.EntitySet.Details.DataService.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Public Properties
    
        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public int Id
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Id);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Id, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Id_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string RiskDescription
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskDescription);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskDescription, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskDescription_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskDescription_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskDescription_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime DateRaised
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateRaised);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateRaised, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateRaised_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> RiskLikelihood
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskLikelihood);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskLikelihood, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskLikelihood_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskLikelihood_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskLikelihood_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> RiskImpact
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskImpact);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskImpact, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskImpact_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskImpact_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RiskImpact_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.DateTime TargetDate
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.TargetDate);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.TargetDate, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void TargetDate_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ControlMeasures
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ControlMeasures);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ControlMeasures, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ControlMeasures_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTime> DateCompleted
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateCompleted);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateCompleted, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void DateCompleted_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<int> OverallRisk
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.OverallRisk);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.OverallRisk, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverallRisk_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverallRisk_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OverallRisk_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string CreatedBy
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.CreatedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CreatedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo CreatedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.CreatedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Created
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Created);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Created_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public string ModifiedBy
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ModifiedBy);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ModifiedBy_Changed();
        public global::Microsoft.LightSwitch.Framework.Server.PersonInfo ModifiedByInfo
        {
            get
            {
                global::Microsoft.LightSwitch.Server.IPersonInfoFactory personInfoFactory = global::LightSwitchApplication.Application.Current.GetPersonInfoFactory();
                return (global::Microsoft.LightSwitch.Framework.Server.PersonInfo) personInfoFactory.ResolvePerson(this.ModifiedBy);
            }
        }

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::System.Nullable<global::System.DateTimeOffset> Modified
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Modified);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Modified_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public byte[] RowVersion
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RowVersion);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RowVersion, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void RowVersion_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.Employee AssignedTo
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void AssignedTo_Changed();

        /// <summary>
        /// No Modeled Description Available
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::LightSwitchApplication.ChangeRequest ChangeRequest
        {
            get
            {
                return global::LightSwitchApplication.AssociatedRisk.DetailsClass.GetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest);
            }
            set
            {
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.SetValue(this, global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest, value);
            }
        }
        
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_IsReadOnly(ref bool result);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_Validate(global::Microsoft.LightSwitch.EntityValidationResultsBuilder results);
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ChangeRequest_Changed();

        #endregion
    
        #region Details Class
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public sealed class DetailsClass : global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<
                global::LightSwitchApplication.AssociatedRisk,
                global::LightSwitchApplication.AssociatedRisk.DetailsClass,
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.IImplementation,
                global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySet,
                global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>,
                global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>>
        {
    
            static DetailsClass()
            {
                var initializeEntry = global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Id;
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>.Entry
                __AssociatedRiskEntry = new global::Microsoft.LightSwitch.Details.Framework.Base.EntityDetails<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>.Entry(
                    global::LightSwitchApplication.AssociatedRisk.DetailsClass.__AssociatedRisk_CreateNew,
                    global::LightSwitchApplication.AssociatedRisk.DetailsClass.__AssociatedRisk_Created,
                    global::LightSwitchApplication.AssociatedRisk.DetailsClass.__AssociatedRisk_AllowSaveWithErrors);
            private static global::LightSwitchApplication.AssociatedRisk __AssociatedRisk_CreateNew(global::Microsoft.LightSwitch.Framework.EntitySet<global::LightSwitchApplication.AssociatedRisk> es)
            {
                return new global::LightSwitchApplication.AssociatedRisk(es);
            }
            private static void __AssociatedRisk_Created(global::LightSwitchApplication.AssociatedRisk e)
            {
                e.AssociatedRisk_Created();
            }
            private static bool __AssociatedRisk_AllowSaveWithErrors(global::LightSwitchApplication.AssociatedRisk e)
            {
                bool result = false;
                e.AssociatedRisk_AllowSaveWithErrors(ref result);
                return result;
            }
    
            public DetailsClass() : base()
            {
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityCommandSet<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass> Commands
            {
                get
                {
                    return base.Commands;
                }
            }
    
            public new global::Microsoft.LightSwitch.Details.Framework.EntityMethodSet<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass> Methods
            {
                get
                {
                    return base.Methods;
                }
            }
    
            public new global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySet Properties
            {
                get
                {
                    return base.Properties;
                }
            }
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public sealed class PropertySet : global::Microsoft.LightSwitch.Details.Framework.Base.EntityPropertySet<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass>
            {
    
                public PropertySet() : base()
                {
                }
    
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int> Id
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Id) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string> RiskDescription
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskDescription) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime> DateRaised
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateRaised) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>> RiskLikelihood
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskLikelihood) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>> RiskImpact
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RiskImpact) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime> TargetDate
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.TargetDate) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string> ControlMeasures
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ControlMeasures) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>> DateCompleted
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.DateCompleted) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>> OverallRisk
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.OverallRisk) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string> CreatedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.CreatedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Created
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Created) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string> ModifiedBy
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ModifiedBy) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>> Modified
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.Modified) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]> RowVersion
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.RowVersion) as global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee> AssignedTo
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee>;
                    }
                }
                
                public global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest> ChangeRequest
                {
                    get
                    {
                        return base.GetItem(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest) as global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest>;
                    }
                }
                
            }
    
            #pragma warning disable 109
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
            public interface IImplementation : global::Microsoft.LightSwitch.Internal.IEntityImplementation
            {
                new int Id { get; set; }
                new string RiskDescription { get; set; }
                new global::System.DateTime DateRaised { get; set; }
                new global::System.Nullable<int> RiskLikelihood { get; set; }
                new global::System.Nullable<int> RiskImpact { get; set; }
                new global::System.DateTime TargetDate { get; set; }
                new string ControlMeasures { get; set; }
                new global::System.Nullable<global::System.DateTime> DateCompleted { get; set; }
                new global::System.Nullable<int> OverallRisk { get; set; }
                new string CreatedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Created { get; }
                new string ModifiedBy { get; }
                new global::System.Nullable<global::System.DateTimeOffset> Modified { get; }
                new byte[] RowVersion { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation AssignedTo { get; set; }
                new global::Microsoft.LightSwitch.Internal.IEntityImplementation ChangeRequest { get; set; }
            }
            #pragma warning restore 109
    
            [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "12.0.0.0")]
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal class PropertySetProperties
            {
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int>.Entry
                    Id = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int>.Entry(
                        "Id",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Id_OnValueChanged);
                private static void _Id_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._Id, sf);
                }
                private static bool _Id_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.Id_IsReadOnly(ref result);
                    return result;
                }
                private static void _Id_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Id_Validate(r);
                }
                private static int _Id_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.Id;
                }
                private static void _Id_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, int v)
                {
                    d.ImplementationEntity.Id = v;
                }
                private static void _Id_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.Id_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry
                    RiskDescription = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry(
                        "RiskDescription",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskDescription_OnValueChanged);
                private static void _RiskDescription_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskDescription, sf);
                }
                private static bool _RiskDescription_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.RiskDescription_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskDescription_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskDescription_Validate(r);
                }
                private static string _RiskDescription_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskDescription;
                }
                private static void _RiskDescription_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, string v)
                {
                    d.ImplementationEntity.RiskDescription = v;
                }
                private static void _RiskDescription_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.RiskDescription_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Entry
                    DateRaised = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Entry(
                        "DateRaised",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateRaised_OnValueChanged);
                private static void _DateRaised_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._DateRaised, sf);
                }
                private static bool _DateRaised_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.DateRaised_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateRaised_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateRaised_Validate(r);
                }
                private static global::System.DateTime _DateRaised_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.DateRaised;
                }
                private static void _DateRaised_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.DateRaised = global::LightSwitchApplication.AssociatedRisk.DetailsClass.TruncateDate(v);
                }
                private static void _DateRaised_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.DateRaised_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry
                    RiskLikelihood = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry(
                        "RiskLikelihood",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskLikelihood_OnValueChanged);
                private static void _RiskLikelihood_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskLikelihood, sf);
                }
                private static bool _RiskLikelihood_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.RiskLikelihood_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskLikelihood_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskLikelihood_Validate(r);
                }
                private static global::System.Nullable<int> _RiskLikelihood_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskLikelihood;
                }
                private static void _RiskLikelihood_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.RiskLikelihood = v;
                }
                private static void _RiskLikelihood_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.RiskLikelihood_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry
                    RiskImpact = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry(
                        "RiskImpact",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RiskImpact_OnValueChanged);
                private static void _RiskImpact_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._RiskImpact, sf);
                }
                private static bool _RiskImpact_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.RiskImpact_IsReadOnly(ref result);
                    return result;
                }
                private static void _RiskImpact_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RiskImpact_Validate(r);
                }
                private static global::System.Nullable<int> _RiskImpact_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.RiskImpact;
                }
                private static void _RiskImpact_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.RiskImpact = v;
                }
                private static void _RiskImpact_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.RiskImpact_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Entry
                    TargetDate = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Entry(
                        "TargetDate",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._TargetDate_OnValueChanged);
                private static void _TargetDate_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._TargetDate, sf);
                }
                private static bool _TargetDate_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.TargetDate_IsReadOnly(ref result);
                    return result;
                }
                private static void _TargetDate_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.TargetDate_Validate(r);
                }
                private static global::System.DateTime _TargetDate_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.TargetDate;
                }
                private static void _TargetDate_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.DateTime v)
                {
                    d.ImplementationEntity.TargetDate = global::LightSwitchApplication.AssociatedRisk.DetailsClass.TruncateDate(v);
                }
                private static void _TargetDate_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.TargetDate_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry
                    ControlMeasures = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry(
                        "ControlMeasures",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ControlMeasures_OnValueChanged);
                private static void _ControlMeasures_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._ControlMeasures, sf);
                }
                private static bool _ControlMeasures_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.ControlMeasures_IsReadOnly(ref result);
                    return result;
                }
                private static void _ControlMeasures_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ControlMeasures_Validate(r);
                }
                private static string _ControlMeasures_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.ControlMeasures;
                }
                private static void _ControlMeasures_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, string v)
                {
                    d.ImplementationEntity.ControlMeasures = v;
                }
                private static void _ControlMeasures_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.ControlMeasures_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry
                    DateCompleted = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>>.Entry(
                        "DateCompleted",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._DateCompleted_OnValueChanged);
                private static void _DateCompleted_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._DateCompleted, sf);
                }
                private static bool _DateCompleted_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.DateCompleted_IsReadOnly(ref result);
                    return result;
                }
                private static void _DateCompleted_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.DateCompleted_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTime> _DateCompleted_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.DateCompleted;
                }
                private static void _DateCompleted_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.Nullable<global::System.DateTime> v)
                {
                    d.ImplementationEntity.DateCompleted = global::LightSwitchApplication.AssociatedRisk.DetailsClass.TruncateDate(v);
                }
                private static void _DateCompleted_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.DateCompleted_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry
                    OverallRisk = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Entry(
                        "OverallRisk",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._OverallRisk_OnValueChanged);
                private static void _OverallRisk_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._OverallRisk, sf);
                }
                private static bool _OverallRisk_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.OverallRisk_IsReadOnly(ref result);
                    return result;
                }
                private static void _OverallRisk_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.OverallRisk_Validate(r);
                }
                private static global::System.Nullable<int> _OverallRisk_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.OverallRisk;
                }
                private static void _OverallRisk_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::System.Nullable<int> v)
                {
                    d.ImplementationEntity.OverallRisk = v;
                }
                private static void _OverallRisk_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.OverallRisk_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry
                    CreatedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry(
                        "CreatedBy",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._CreatedBy_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._CreatedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._CreatedBy_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._CreatedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._CreatedBy_OnValueChanged);
                private static void _CreatedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._CreatedBy, sf);
                }
                private static bool _CreatedBy_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.CreatedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _CreatedBy_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.CreatedBy_Validate(r);
                }
                private static string _CreatedBy_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.CreatedBy;
                }
                private static void _CreatedBy_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.CreatedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Created = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Created",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Created_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Created_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Created_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Created_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Created_OnValueChanged);
                private static void _Created_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._Created, sf);
                }
                private static bool _Created_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.Created_IsReadOnly(ref result);
                    return result;
                }
                private static void _Created_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Created_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Created_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.Created;
                }
                private static void _Created_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.Created_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry
                    ModifiedBy = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Entry(
                        "ModifiedBy",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ModifiedBy_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ModifiedBy_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ModifiedBy_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ModifiedBy_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ModifiedBy_OnValueChanged);
                private static void _ModifiedBy_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._ModifiedBy, sf);
                }
                private static bool _ModifiedBy_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.ModifiedBy_IsReadOnly(ref result);
                    return result;
                }
                private static void _ModifiedBy_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ModifiedBy_Validate(r);
                }
                private static string _ModifiedBy_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.ModifiedBy;
                }
                private static void _ModifiedBy_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.ModifiedBy_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry
                    Modified = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Entry(
                        "Modified",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Modified_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Modified_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Modified_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Modified_GetImplementationValue,
                        null,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._Modified_OnValueChanged);
                private static void _Modified_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._Modified, sf);
                }
                private static bool _Modified_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.Modified_IsReadOnly(ref result);
                    return result;
                }
                private static void _Modified_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.Modified_Validate(r);
                }
                private static global::System.Nullable<global::System.DateTimeOffset> _Modified_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.Modified;
                }
                private static void _Modified_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.Modified_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]>.Entry
                    RowVersion = new global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]>.Entry(
                        "RowVersion",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._RowVersion_OnValueChanged);
                private static void _RowVersion_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._RowVersion, sf);
                }
                private static bool _RowVersion_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.RowVersion_IsReadOnly(ref result);
                    return result;
                }
                private static void _RowVersion_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.RowVersion_Validate(r);
                }
                private static byte[] _RowVersion_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.RowVersion;
                }
                private static void _RowVersion_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, byte[] v)
                {
                    d.ImplementationEntity.RowVersion = v;
                }
                private static void _RowVersion_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.RowVersion_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee>.Entry
                    AssignedTo = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee>.Entry(
                        "AssignedTo",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_GetCoreImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_Refresh,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._AssignedTo_OnValueChanged);
                private static void _AssignedTo_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._AssignedTo, sf);
                }
                private static bool _AssignedTo_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.AssignedTo_IsReadOnly(ref result);
                    return result;
                }
                private static void _AssignedTo_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.AssignedTo_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _AssignedTo_GetCoreImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.AssignedTo;
                }
                private static global::LightSwitchApplication.Employee _AssignedTo_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.Employee, global::LightSwitchApplication.Employee.DetailsClass>(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::LightSwitchApplication.Employee v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo, (i, ev) => i.AssignedTo = ev, v);
                }
                private static void _AssignedTo_Refresh(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.AssignedTo, ref d._AssignedTo);
                }
                private static void _AssignedTo_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.AssignedTo_Changed();
                }
    
                [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
                public static readonly global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Entry
                    ChangeRequest = new global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Entry(
                        "ChangeRequest",
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_Stub,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_ComputeIsReadOnly,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_Validate,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_GetCoreImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_GetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_SetImplementationValue,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_Refresh,
                        global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties._ChangeRequest_OnValueChanged);
                private static void _ChangeRequest_Stub(global::Microsoft.LightSwitch.Details.Framework.Base.DetailsCallback<global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Data> c, global::LightSwitchApplication.AssociatedRisk.DetailsClass d, object sf)
                {
                    c(d, ref d._ChangeRequest, sf);
                }
                private static bool _ChangeRequest_ComputeIsReadOnly(global::LightSwitchApplication.AssociatedRisk e)
                {
                    bool result = false;
                    e.ChangeRequest_IsReadOnly(ref result);
                    return result;
                }
                private static void _ChangeRequest_Validate(global::LightSwitchApplication.AssociatedRisk e, global::Microsoft.LightSwitch.EntityValidationResultsBuilder r)
                {
                    e.ChangeRequest_Validate(r);
                }
                private static global::Microsoft.LightSwitch.Internal.IEntityImplementation _ChangeRequest_GetCoreImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.ImplementationEntity.ChangeRequest;
                }
                private static global::LightSwitchApplication.ChangeRequest _ChangeRequest_GetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    return d.GetImplementationValue<global::LightSwitchApplication.ChangeRequest, global::LightSwitchApplication.ChangeRequest.DetailsClass>(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest);
                }
                private static void _ChangeRequest_SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass d, global::LightSwitchApplication.ChangeRequest v)
                {
                    d.SetImplementationValue(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest, (i, ev) => i.ChangeRequest = ev, v);
                }
                private static void _ChangeRequest_Refresh(global::LightSwitchApplication.AssociatedRisk.DetailsClass d)
                {
                    d.RefreshNavigationProperty(global::LightSwitchApplication.AssociatedRisk.DetailsClass.PropertySetProperties.ChangeRequest, ref d._ChangeRequest);
                }
                private static void _ChangeRequest_OnValueChanged(global::LightSwitchApplication.AssociatedRisk e)
                {
                    e.ChangeRequest_Changed();
                }
    
            }
    
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, int>.Data _Id;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data _RiskDescription;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Data _DateRaised;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data _RiskLikelihood;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data _RiskImpact;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.DateTime>.Data _TargetDate;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data _ControlMeasures;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTime>>.Data _DateCompleted;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<int>>.Data _OverallRisk;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data _CreatedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Created;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, string>.Data _ModifiedBy;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::System.Nullable<global::System.DateTimeOffset>>.Data _Modified;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityStorageProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, byte[]>.Data _RowVersion;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.Employee>.Data _AssignedTo;
            
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private global::Microsoft.LightSwitch.Details.Framework.EntityReferenceProperty<global::LightSwitchApplication.AssociatedRisk, global::LightSwitchApplication.AssociatedRisk.DetailsClass, global::LightSwitchApplication.ChangeRequest>.Data _ChangeRequest;
            
        }
    
        #endregion
    }
    
    #endregion
}
